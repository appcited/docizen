---
import type { Item, ItemId } from "../components/Item";
import Navigation from "../components/Navigation.vue";
import "../style.css";
import Header from "./Header.astro";
import Content from "./Content.astro";

interface Props {
	pageName: string;
	pageIconPath: string;
	pageLinks: string[];
	items: Record<ItemId, Item>;
	currentItem: Item;
}

const { pageName, pageIconPath, items, currentItem, pageLinks } = Astro.props;
const rootItems = Object.values(items).filter(item => item.parentId == null)
const hasTopLevelHeading = currentItem.headings?.some(heading => heading.depth === 1) ?? false
// const pageIconFile = await import(/* @vite-ignore */ `${pathToFileURL(pageIconPath).href}?url`)
---

<!doctype html>
<html lang="de-DE">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<!-- <link rel="icon" type="image/svg+xml" href={pageIconFile.default} /> -->
		<script>
				!function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",p.crossOrigin="anonymous",p.async=!0,p.src=s.api_host.replace(".i.posthog.com","-assets.i.posthog.com")+"/static/array.js",(r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},u.people.toString=function(){return u.toString(1)+".people (stub)"},o="init capture register register_once register_for_session unregister unregister_for_session getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey getNextSurveyStep identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty createPersonProfile opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing clear_opt_in_out_capturing debug getPageViewId".split(" "),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);
				posthog.init('phc_Dbtz5DrQFtvnyQYtGCkvYGBqb185847iGOI1Qw0wGUb', {
						api_host: 'https://eu.i.posthog.com',
						person_profiles: 'always',
				})
		</script>
		<script is:inline>
			const localStorageTheme = localStorage?.getItem("theme")
			document.documentElement.setAttribute('data-theme', JSON.parse(localStorageTheme));
		</script>
		<title>{currentItem.name} | {pageName}</title>
	</head>
	<body>
		<Header {pageName} {pageIconPath} {pageLinks} />
		<div class="wrapper">
			<nav>
				<Navigation client:only items={rootItems} {currentItem} />
			</nav>
			<main>
				<Content class="content">
					{ !hasTopLevelHeading && <h1>{currentItem.name}</h1> }
					<slot />
				</Content>
			</main>
		</div>
	</body>
</html>

<style>
	html {
		height: 100%;
		background-color: var(--theme-background-color);
		color: var(--theme-text-color);
	}

	body {
		height: 100%;
		min-width: 1024px;
	}

	.wrapper {
		display: flex;
		height: calc(100% - var(--theme-header-height));
		width: 100%;

		nav {
			max-height: 100%;
			width: var(--theme-sidebar-width);
			padding: var(--theme-body-spacing-x);
			border-right: var(--theme-border);
			overflow-y: auto;
		}

		main {
			max-height: 100%;
			width: calc(100% - var(--theme-sidebar-width));
			overflow-y: auto;
		}
	}
</style>
